  ---------------------------------------------------------------------------
  -- Golden model (aligned to DUT): z = 1 in the same cycle the window hits
  ---------------------------------------------------------------------------
  model_chk : process(clk)
    variable errors : integer := 0;
    variable win : std_logic_vector(2 downto 0);
    variable hit : std_logic;
  begin
    if rising_edge(clk) then
      if reset = '1' then
        last2 <= "00";
      else
        -- build current 3-bit window using the two previous bits and current x
        win := last2 & x;

        -- does this window match?
        case win is
          when "001" | "010" | "110" => hit := '1';
          when others                 => hit := '0';
        end case;

        -- DUT 'z' should be '1' this same cycle (FSM moved into DETECT on this edge)
        if z /= hit then
          errors := errors + 1;
          report "Mismatch at time " & time'image(now) &
                 "  (x=" & std_logic'image(x) &
                 ", last2=" & std_logic'image(last2(1)) & std_logic'image(last2(0)) &
                 ", win=" & std_logic'image(win(2)) & std_logic'image(win(1)) & std_logic'image(win(0)) &
                 ") expected z=" & std_logic'image(hit) &
                 " got z=" & std_logic'image(z)
                 severity error;
        end if;

        -- shift in current x for the next window
        last2 <= last2(0) & x;

        if errors > 10 then
          report "Too many mismatches; stopping." severity failure;
        end if;
      end if;
    end if;
  end process;
